services:
  postgres-api:
    image: postgres:14.3
    container_name: portfolio_database
    ports:
      - '5555:5432'
    environment:
      POSTGRES_USER: 'portfolio_manager'
      POSTGRES_PASSWORD: 'portfolio_manager'
      ALL_POSTGRES_DBS: 'portfolio,portfolio_test'
      MIGRATION_SCRIPT: '/docker-entrypoint-initdb.d/migrations.sql'
    volumes:
      - ./database:/docker-entrypoint-initdb.d
      - ./.docker-data/.pg-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U portfolio_manager -d portfolio"]
      interval: 10s     
      timeout: 5s       
      retries: 5        
      start_period: 10s 

  rabbitmq:
    image: rabbitmq:3-management
    container_name: portfolio_rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - ./.docker-data/.rabbit-data:/var/lib/rabbitmq/mnesia
      - ./.docker-data/.rabbit-log:/var/log/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      retries: 5
      start_period: 10s

  portfolio-analyser:
    build:
      context: ./api/src
      dockerfile: ./portfolio_management/Dockerfile
    container_name: portfolio_analyser
    depends_on:
      postgres-api:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    env_file:
      - ./api/src/portfolio_management/.env



  portfolio-api:
    build:
      context: ./api/src
      dockerfile: ./api/Dockerfile
    container_name: portfolio_api
    ports:
      - '8000:8000'
    depends_on:
      postgres-api:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      portfolio-analyser:
        condition: service_started

  ui:
    build:
      context: ./ui
      dockerfile: ./Dockerfile
    container_name: portfolio_ui
    ports:
      - '3000:80'
    depends_on:
      portfolio-api:
        condition: service_started
